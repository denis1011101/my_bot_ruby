name: Daily Send

on:
  schedule:
    - cron: "* * * * *"
  workflow_dispatch:

jobs:
  send:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/${{ github.repository_owner }}/my_bot_ruby-ci:latest
    permissions:
      contents: write
    name: Send daily message
    concurrency:
      group: daily-send
      cancel-in-progress: false
    env:
      TOKEN: ${{ secrets.TOKEN }}
      ADMIN_CHAT_ID: ${{ secrets.ADMIN_CHAT_ID }}
      APP_ENV: production
      FORCE_SEND: ${{ secrets.FORCE_SEND || 'false' }}
      BROWSER_PATH: /usr/bin/chromium-browser
      BUNDLE_BUILD__NOKOGIRI: "--use-system-libraries"
    steps:
      - name: Checkout (with submodules via PAT)
        uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ secrets.PRIVATE_REPOS_TOKEN }}
          persist-credentials: false

      - name: Fix git safe.directory
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"

      - name: Pull latest submodules (track branch = main)
        run: |
          git submodule sync --recursive
          git submodule update --init --recursive --remote

      - name: Add container platform to lockfile
        run: bundle lock --add-platform x86_64-linux-musl

      - name: Bundle install
        run: bundle install --jobs 4 --retry 3 --quiet

      - name: Run sender
        run: make start

     - name: Commit and push changes to secrets submodule
        if: success()
        run: |
          set -e
          cd data/secrets
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          # use PAT for write access to the submodule repo
          git remote set-url origin "https://x-access-token:${{ secrets.PRIVATE_REPOS_TOKEN }}@github.com/denis1011101/my_bot_private_data.git"
          if [ -n "$(git status --porcelain)" ]; then
            git add common_list.yml
            git commit -m "CI: update common_list.yml at $(date -u +%FT%TZ)"
            git push origin main
          else
            echo "No changes to push"
          fi
       shell: bash

      - name: Update superproject submodule pointer and push
        if: success()
        shell: bash
        run: |
          set -e
          cd "${GITHUB_WORKSPACE}"
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          # добавляем новую ревизию сабмодуля в индекс родительского репозитория
          if [ -n "$(git status --porcelain data/secrets)" ]; then
            git add data/secrets
            git commit -m "CI: bump data/secrets to $(git -C data/secrets rev-parse --short HEAD)"
            # на время пуша задаём origin с GITHUB_TOKEN (persist-credentials: false)
            git remote set-url origin "https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
            git push origin HEAD:${{ github.ref_name }}
          else
            echo "No superproject pointer changes"
          fi